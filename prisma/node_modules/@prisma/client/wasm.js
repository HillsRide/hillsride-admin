
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.6.0
 * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
 */
Prisma.prismaVersion = {
  client: "6.6.0",
  engine: "f676762280b54cd07c770017ed3711ddde35f37a"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  fullName: 'fullName',
  email: 'email',
  phone: 'phone',
  employeeId: 'employeeId',
  designation: 'designation',
  department: 'department',
  manager: 'manager',
  approver: 'approver',
  password: 'password',
  pin: 'pin',
  authCode: 'authCode',
  status: 'status',
  needsPasswordChange: 'needsPasswordChange',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SystemSettingScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SearchHistoryScalarFieldEnum = {
  id: 'id',
  search_query: 'search_query',
  latitude: 'latitude',
  longitude: 'longitude',
  search_count: 'search_count',
  first_searched: 'first_searched',
  last_searched: 'last_searched',
  user_type: 'user_type',
  device: 'device',
  is_successful: 'is_successful',
  converted_to_booking: 'converted_to_booking',
  booking_id: 'booking_id',
  user_id: 'user_id',
  session_id: 'session_id',
  source_page: 'source_page',
  search_category: 'search_category',
  estimated_distance: 'estimated_distance',
  estimated_duration: 'estimated_duration',
  peak_hour_search: 'peak_hour_search',
  region: 'region',
  city: 'city',
  state: 'state',
  search_completion_rate: 'search_completion_rate',
  user_agent: 'user_agent',
  ip_address: 'ip_address',
  referral_source: 'referral_source',
  time_to_result: 'time_to_result',
  competitor_price_check: 'competitor_price_check',
  potential_revenue: 'potential_revenue',
  seasonal_factor: 'seasonal_factor',
  market_demand_score: 'market_demand_score'
};

exports.Prisma.LocationDemandAnalyticsScalarFieldEnum = {
  id: 'id',
  region: 'region',
  city: 'city',
  state: 'state',
  total_searches: 'total_searches',
  successful_bookings: 'successful_bookings',
  revenue_generated: 'revenue_generated',
  peak_hours: 'peak_hours',
  popular_routes: 'popular_routes',
  average_fare: 'average_fare',
  demand_score: 'demand_score',
  updated_at: 'updated_at'
};

exports.Prisma.PricingAnalyticsScalarFieldEnum = {
  id: 'id',
  route_hash: 'route_hash',
  base_price: 'base_price',
  surge_multiplier: 'surge_multiplier',
  peak_hour_rate: 'peak_hour_rate',
  off_peak_rate: 'off_peak_rate',
  competitor_price: 'competitor_price',
  success_rate: 'success_rate',
  last_updated: 'last_updated'
};

exports.Prisma.LocationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  district: 'district',
  state: 'state',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RouteScalarFieldEnum = {
  id: 'id',
  originId: 'originId',
  destinationId: 'destinationId',
  directionType: 'directionType',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StopScalarFieldEnum = {
  id: 'id',
  routeId: 'routeId',
  locationId: 'locationId',
  name: 'name',
  order: 'order',
  distanceKm: 'distanceKm',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RouteFareScalarFieldEnum = {
  id: 'id',
  routeId: 'routeId',
  vehicleType: 'vehicleType',
  pricingType: 'pricingType',
  baseFare: 'baseFare',
  perKmRate: 'perKmRate',
  perHourRate: 'perHourRate',
  nightCharge: 'nightCharge',
  hillCharge: 'hillCharge',
  waitingCharge: 'waitingCharge',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RouteAvailabilityScalarFieldEnum = {
  id: 'id',
  routeId: 'routeId',
  vehicleType: 'vehicleType',
  isAvailable: 'isAvailable',
  reason: 'reason',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  fullName: 'fullName',
  email: 'email',
  phone: 'phone',
  employeeId: 'employeeId',
  designation: 'designation',
  department: 'department',
  manager: 'manager',
  approver: 'approver',
  password: 'password',
  pin: 'pin',
  authCode: 'authCode',
  status: 'status',
  role: 'role'
};

exports.Prisma.SystemSettingOrderByRelevanceFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value'
};

exports.Prisma.SearchHistoryOrderByRelevanceFieldEnum = {
  id: 'id',
  search_query: 'search_query',
  user_type: 'user_type',
  device: 'device',
  booking_id: 'booking_id',
  session_id: 'session_id',
  source_page: 'source_page',
  search_category: 'search_category',
  region: 'region',
  city: 'city',
  state: 'state',
  user_agent: 'user_agent',
  ip_address: 'ip_address',
  referral_source: 'referral_source'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.LocationDemandAnalyticsOrderByRelevanceFieldEnum = {
  id: 'id',
  region: 'region',
  city: 'city',
  state: 'state'
};

exports.Prisma.PricingAnalyticsOrderByRelevanceFieldEnum = {
  id: 'id',
  route_hash: 'route_hash'
};

exports.Prisma.LocationOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  district: 'district',
  state: 'state'
};

exports.Prisma.RouteOrderByRelevanceFieldEnum = {
  id: 'id',
  originId: 'originId',
  destinationId: 'destinationId',
  directionType: 'directionType'
};

exports.Prisma.StopOrderByRelevanceFieldEnum = {
  id: 'id',
  routeId: 'routeId',
  locationId: 'locationId',
  name: 'name'
};

exports.Prisma.RouteFareOrderByRelevanceFieldEnum = {
  id: 'id',
  routeId: 'routeId',
  vehicleType: 'vehicleType',
  pricingType: 'pricingType'
};

exports.Prisma.RouteAvailabilityOrderByRelevanceFieldEnum = {
  id: 'id',
  routeId: 'routeId',
  vehicleType: 'vehicleType',
  reason: 'reason'
};


exports.Prisma.ModelName = {
  User: 'User',
  SystemSetting: 'SystemSetting',
  SearchHistory: 'SearchHistory',
  LocationDemandAnalytics: 'LocationDemandAnalytics',
  PricingAnalytics: 'PricingAnalytics',
  Location: 'Location',
  Route: 'Route',
  Stop: 'Stop',
  RouteFare: 'RouteFare',
  RouteAvailability: 'RouteAvailability'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
